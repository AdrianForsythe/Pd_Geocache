###### snakemake pipeline to scrape geocaching records overlapping with likely sites of bat hibernacula ######

REGIONS = "na eu".split()

# TODO: add expansion to file names in this fashion:
# expand("data/{id}/{id}-gc-list-unfiltered.csv", id=REGIONS)

# clean the list of GC sites based on sampling keywords from descriptions
# takes a sample of the description sections from GC pages

### Start with raw list
# Read in GC list
rule SampleDescriptions:
    input:
        expand({id}/"data/gc-list-{id}-unfiltered.csv", id=REGIONS)
    output:
        expand({id}/"data/gc-descriptions-{id}.csv", id=REGIONS)
    script:
        "scripts/pycaching-descriptions.py"

rule FilterDescriptions:
    input:
        expand({id}/"data/gc-descriptions-{id}.csv", id=REGIONS)
    output:
        expand({id}/"data/gc-list-{id}-filtered.csv",id=REGIONS)
        expand({id}/"figures/keyword-combinations-{id}.png",id=REGIONS)
    script:
        "scripts/filter_descriptions.R"

# Now scrape just the sites that have these keywords
rule ScrapeGC:
    input:
        expand({id}/"data/gc-list-{id}-filtered.csv",id=REGIONS)
    output:
        expand({id}/"data/gc-{id}-scrape.csv",id=REGIONS)
    script:
        "scripts/pycaching.py"

# WNS presence at county level polygon
rule PresenceShape:
    output:
        expand({id}/"data/presence.df.rds"
        expand({id}/"data/presence.poly.rds"
    script:
        "scripts/wns-presence.R"

# extra plots
rule ExtraPlots:
    input:
        expand({id}/"data/presence.df.rds"
    output:
        expand({id}/"figures/county-incidence.png"
    script:
        "script/extra-plots.R"

# county level incidence of wns
rule Incidence:
    input:
        expand({id}/"data/presence.df.rds"
    output:
        expand({id}/"data/full-county-year-incidence.csv"
    script:
        "scripts/full-county-incidence.R"

# Find overlaps between GC sites and WNS infected counties
rule CoordinateOverlap:
    input:
        expand({id}/"data/gc-na-scrape.csv",
        expand({id}/"data/presence.df.rds",
        expand({id}/"data/presence.poly.rds"
    output:
        expand({id}/"data/relevant-records.csv"
    script:
        "scripts/coordinate-overlap.R"

# Visualization of movement between sites
rule PlotMapping:
    input:
        expand({id}/"data/presence.df.rds"),
        expand({id}/"data/relevant-records.csv")
    output:
        expand({id}/"figures/num-geocache.png"),
        expand({id}/"figures/num-geocache-year.png"),
        expand({id}/"figures/max-visits-date.png"),
        expand({id}/"figures/users_year.gif")
    script:
        "scripts/geocache_mapping.R"

# Stitch both countries together to create one polygon and fix names
rule CountyFix:
    input:
        expand({id}/"data/all-counties.csv"),
        expand({id}/"shape/lcd_000b16a_e/lcd_000b16a_e.shp"),
        expand({id}/"data/presence.df.rds"),
        expand({id}/"data/presence.poly.rds")
    output:
        expand({id}/"data/united.poly.rds")
    script:
        "scripts/county-fix.R"

# Constructs spatial weight matricies from neighbour lists of county centroids
rule SpatialWeightMatrix:
    input:
        expand({id}/"data/relevant-records.csv"),
        expand({id}/"data/presence.df.rds")
    output:
        expand({id}/"data/spatial.weights.long")
    script:
        "scripts/spatial-weight-matrix.R"

# Constructs both adjacency and visit-based weights at the county level in long-format
rule GeocacheWeightMatrix:
    input:
        expand({id}/"data/relevant-records.csv"),
        expand({id}/"data/presence.df.rds")
    output:
        expand({id}/"data/gc.weights"),
        expand({id}/"figures/counties-shared-users.png")
    script:
        "scripts/geocache-weight.R"

rule RunSim:
    input:
        "examples/ORegan-2016-resources/us_data_dur.csv"
    output:
    script:
        "scripts/sim_runner.R"

rule GLMCaveData:
    input:
        expand({id}/"data/gc.weights.csv"),
        expand({id}/"data/relevant-records.csv")
    output:
        expand({id}/"data/glm-summary.txt"),
        expand({id}/"figures/exp-growth-rate.png")
    script:
        "scripts/GLMmodelfitccavedata.R"
